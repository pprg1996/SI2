{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["estado","clientes","id","nombre","apellido","sexo","direccion","telefono","empleados","clave","ventas","dia","mes","ano","totalBolivares","comidas","descripcion","precioBolivares","window","localStorage","getItem","setItem","JSON","stringify","estadoContext","createContext","Cliente","show","useState","modificar","setModificar","useContext","setState","nuevoNombre","setNuevoNombre","nuevoApellido","setNuevoApellido","nuevoSexo","setNuevoSexo","nuevoDireccion","setNuevoDireccion","nuevoTelefono","setNuevoTelefono","onChange","e","target","value","defaultValue","Button","style","marginRight","onClick","confirm","state","clientesNuevos","map","cliente","filter","Clientes","showAgregarCliente","setShowAgregarCliente","buscarId","setBuscarId","buscarNombre","setBuscarNombre","buscarApellido","setBuscarApellido","buscarSexo","setBuscarSexo","buscarDireccion","setBuscarDireccion","buscarTelefono","setBuscarTelefono","clientesIdFiltrados","String","toLowerCase","startsWith","clienteId","placeholder","marginInline","nuevoId","length","alert","Table","striped","bordered","hover","includes","key","Empleado","nuevoClave","setNuevoClave","empleadosNuevos","empleado","Empleados","showAgregarEmpleado","setShowAgregarEmpleado","buscarClave","setBuscarClave","empleadosIdFiltrados","empleadoId","Venta","nuevoDia","setNuevoDia","nuevoMes","setNuevoMes","nuevoAno","setNuevoAno","nuevoTotalBolivares","setNuevoTotalBolivares","ventasNuevas","venta","Ventas","showAgregarVenta","setShowAgregarVenta","buscarDia","setBuscarDia","buscarMes","setBuscarMes","buscarAno","setBuscarAno","buscarTotalBolivares","setBuscarBolivares","ventasIdFiltradas","ventaId","Comida","nuevoDescripcion","setNuevoDescripcion","nuevoPrecioBolivares","setNuevoPrecioBolivares","comidasNuevas","comida","Comidas","showAgregarComida","setShowAgregarComida","buscarDescripcion","setBuscarDescripcion","buscarPrecioBolivares","setBuscarPrecioBolivares","comidasIdFiltradas","comidaId","Login","setLogged","usuario","setUsuario","setClave","display","flexDirection","alignItems","margin","padding","borderRadius","border","marginBottom","type","App","parse","showReporte","setShowReporte","showCalc","setShowCalc","mostrarDolares","setMostrarDolares","bsPorDolar","setBsPorDolar","logged","ventaMasAltaId","forEach","i","Number","find","v","ventaMasAlta","ventaMasBajaId","ventaMasBaja","totalGanancias","reduce","acc","Provider","justifyContent","Modal","onHide","Header","closeButton","Title","Body","toFixed","Footer","prompt","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46c12554.chunk.js","sourcesContent":["import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createContext, useContext, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Calculator } from \"react-mac-calculator\";\n\nlet clientes = [\n  { id: 0, nombre: \"Juan\", apellido: \"Camacho\", sexo: \"Masculino\", direccion: \"Naguanagua\", telefono: \"04244438768\" },\n  { id: 1, nombre: \"Manuel\", apellido: \"Garcia\", sexo: \"Masculino\", direccion: \"San Diego\", telefono: \"04248745321\" },\n  { id: 2, nombre: \"Elena\", apellido: \"Ojeda\", sexo: \"Femenino\", direccion: \"Valencia\", telefono: \"04243856424\" },\n  { id: 3, nombre: \"Pablo\", apellido: \"Francis\", sexo: \"Masculino\", direccion: \"Naguanagua\", telefono: \"04169693243\" },\n  { id: 4, nombre: \"Wilmer\", apellido: \"Herna\", sexo: \"Masculino\", direccion: \"Santa Rosa\", telefono: \"04125565643\" },\n];\n\nlet empleados = [\n  {\n    id: 0,\n    nombre: \"Juan\",\n    apellido: \"Camacho\",\n    sexo: \"Masculino\",\n    direccion: \"Naguanagua\",\n    telefono: \"04244438768\",\n    clave: \"qwertyytrewq\",\n  },\n  {\n    id: 1,\n    nombre: \"Diana\",\n    apellido: \"Abreu\",\n    sexo: \"Femenino\",\n    direccion: \"Naguanagua\",\n    telefono: \"04248987687\",\n    clave: \"fbhsdbvfjdbf\",\n  },\n  {\n    id: 2,\n    nombre: \"Daniel\",\n    apellido: \"Jimenez\",\n    sexo: \"Masculino\",\n    direccion: \"Isabelica\",\n    telefono: \"04146578767\",\n    clave: \"dfbwfuiweuifwue\",\n  },\n];\n\nlet ventas = [\n  { id: 0, dia: \"13\", mes: \"9\", ano: \"2020\", totalBolivares: \"15367322\" },\n  { id: 1, dia: \"23\", mes: \"8\", ano: \"2019\", totalBolivares: \"234632478\" },\n  { id: 2, dia: \"14\", mes: \"10\", ano: \"2020\", totalBolivares: \"47238732\" },\n  { id: 3, dia: \"4\", mes: \"11\", ano: \"2019\", totalBolivares: \"23472378\" },\n  { id: 4, dia: \"10\", mes: \"2\", ano: \"2020\", totalBolivares: \"324723677\" },\n  { id: 5, dia: \"9\", mes: \"3\", ano: \"2018\", totalBolivares: \"2384892378\" },\n  { id: 6, dia: \"9\", mes: \"6\", ano: \"2020\", totalBolivares: \"237428\" },\n  { id: 7, dia: \"14\", mes: \"1\", ano: \"2020\", totalBolivares: \"3822389\" },\n  { id: 8, dia: \"9\", mes: \"8\", ano: \"2020\", totalBolivares: \"12127823\" },\n];\n\nlet comidas = [\n  { id: 0, nombre: \"Empanada\", descripcion: \"Masa frita de harina de maiz\", precioBolivares: \"500000\" },\n  { id: 1, nombre: \"Hamburguesa\", descripcion: \"Carne asada con pan y salsas\", precioBolivares: \"1000000\" },\n  { id: 2, nombre: \"Camaron\", descripcion: \"Animal marino\", precioBolivares: \"500000\" },\n  { id: 3, nombre: \"Dona\", descripcion: \"Masa dulce horneada\", precioBolivares: \"700000\" },\n  { id: 4, nombre: \"Pizza\", descripcion: \"Masa horneada con salsa y queso\", precioBolivares: \"1500000\" },\n  { id: 5, nombre: \"Sushi\", descripcion: \"Pescado envuelto en arroz\", precioBolivares: \"2000000\" },\n];\n\nlet estado = {\n  clientes,\n  empleados,\n  ventas,\n  comidas,\n};\n\nif (!window.localStorage.getItem(\"estado\")) window.localStorage.setItem(\"estado\", JSON.stringify(estado));\n\nconst estadoContext = createContext();\n\nconst Cliente = ({ id, nombre, apellido, sexo, direccion, telefono, show }) => {\n  const [modificar, setModificar] = useState(false);\n  const [state, setState] = useContext(estadoContext);\n\n  const [nuevoNombre, setNuevoNombre] = useState(nombre);\n  const [nuevoApellido, setNuevoApellido] = useState(apellido);\n  const [nuevoSexo, setNuevoSexo] = useState(sexo);\n  const [nuevoDireccion, setNuevoDireccion] = useState(direccion);\n  const [nuevoTelefono, setNuevoTelefono] = useState(telefono);\n\n  const eliminarCliente = () => {\n    if (window.confirm(`Seguro que quiere eliminar el cliente de id=${id}`)) {\n      setState(state => {\n        const clientesNuevos = state.clientes.filter(cliente => cliente.id !== id);\n        return { ...state, clientes: clientesNuevos };\n      });\n    }\n  };\n\n  const modificarCliente = () => {\n    if (window.confirm(`Seguro que quiere modificar el cliente de id=${id}`)) {\n      setState(state => {\n        const clientesNuevos = state.clientes.map(cliente => {\n          if (cliente.id === id) {\n            return {\n              id,\n              nombre: nuevoNombre,\n              apellido: nuevoApellido,\n              sexo: nuevoSexo,\n              direccion: nuevoDireccion,\n              telefono: nuevoTelefono,\n            };\n          } else return cliente;\n        });\n\n        return { ...state, clientes: clientesNuevos };\n      });\n    }\n\n    setModificar(false);\n  };\n\n  if (!show) return null;\n\n  if (modificar)\n    return (\n      <tr>\n        <td>{id}</td>\n        <td>\n          <input onChange={e => setNuevoNombre(e.target.value)} defaultValue={nombre} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoApellido(e.target.value)} defaultValue={apellido} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoSexo(e.target.value)} defaultValue={sexo} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoDireccion(e.target.value)} defaultValue={direccion} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoTelefono(e.target.value)} defaultValue={telefono} />\n        </td>\n        <td>\n          <Button style={{ marginRight: \"16px\" }} onClick={modificarCliente}>\n            Aceptar\n          </Button>\n          <Button onClick={() => setModificar(false)}>Cancelar</Button>\n        </td>\n      </tr>\n    );\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{nombre}</td>\n      <td>{apellido}</td>\n      <td>{sexo}</td>\n      <td>{direccion}</td>\n      <td>{telefono}</td>\n      <td>\n        <Button style={{ marginRight: \"16px\" }} onClick={() => setModificar(true)}>\n          Modificar\n        </Button>\n        <Button onClick={eliminarCliente}>Eliminar</Button>\n      </td>\n    </tr>\n  );\n};\n\nconst Clientes = () => {\n  const [state, setState] = useContext(estadoContext);\n\n  const [showAgregarCliente, setShowAgregarCliente] = useState(false);\n  const [nuevoNombre, setNuevoNombre] = useState(\"\");\n  const [nuevoApellido, setNuevoApellido] = useState(\"\");\n  const [nuevoSexo, setNuevoSexo] = useState(\"\");\n  const [nuevoDireccion, setNuevoDireccion] = useState(\"\");\n  const [nuevoTelefono, setNuevoTelefono] = useState(\"\");\n\n  const [buscarId, setBuscarId] = useState(\"\");\n  const [buscarNombre, setBuscarNombre] = useState(\"\");\n  const [buscarApellido, setBuscarApellido] = useState(\"\");\n  const [buscarSexo, setBuscarSexo] = useState(\"\");\n  const [buscarDireccion, setBuscarDireccion] = useState(\"\");\n  const [buscarTelefono, setBuscarTelefono] = useState(\"\");\n\n  let clientesIdFiltrados = state.clientes.map(cliente => {\n    if (\n      String(cliente.id).toLowerCase().startsWith(buscarId.toLowerCase()) &&\n      cliente.nombre.toLowerCase().startsWith(buscarNombre.toLowerCase()) &&\n      cliente.apellido.toLowerCase().startsWith(buscarApellido.toLowerCase()) &&\n      cliente.sexo.toLowerCase().startsWith(buscarSexo.toLowerCase()) &&\n      cliente.direccion.toLowerCase().startsWith(buscarDireccion.toLowerCase()) &&\n      cliente.telefono.toLowerCase().startsWith(buscarTelefono.toLowerCase())\n    )\n      return cliente.id;\n    else return null;\n  });\n\n  clientesIdFiltrados = clientesIdFiltrados.filter(clienteId => clienteId !== null);\n\n  const agregarCliente = () => {\n    if (!nuevoNombre || !nuevoApellido || !nuevoSexo || !nuevoDireccion || !nuevoTelefono) {\n      alert(\"Todos los campos deben ser llenados\");\n      return;\n    }\n\n    const nuevoId = state.clientes.length === 0 ? 0 : state.clientes[state.clientes.length - 1].id + 1;\n    const clientesNuevos = [\n      ...state.clientes,\n      {\n        id: nuevoId,\n        nombre: nuevoNombre,\n        apellido: nuevoApellido,\n        sexo: nuevoSexo,\n        direccion: nuevoDireccion,\n        telefono: nuevoTelefono,\n      },\n    ];\n\n    setState(state => {\n      return { ...state, clientes: clientesNuevos };\n    });\n\n    setShowAgregarCliente(false);\n  };\n\n  return (\n    <>\n      <h1>Clientes</h1>\n\n      {showAgregarCliente ? (\n        <>\n          <input onChange={e => setNuevoNombre(e.target.value)} placeholder=\"Nuevo Nombre\" />\n          <input onChange={e => setNuevoApellido(e.target.value)} placeholder=\"Nuevo Apellido\" />\n          <input onChange={e => setNuevoSexo(e.target.value)} placeholder=\"Nuevo Sexo\" />\n          <input onChange={e => setNuevoDireccion(e.target.value)} placeholder=\"Nueva Direccion\" />\n          <input onChange={e => setNuevoTelefono(e.target.value)} placeholder=\"Nuevo Telefono\" />\n\n          <Button style={{ marginInline: \"16px\" }} onClick={agregarCliente}>\n            Agregar\n          </Button>\n          <Button onClick={() => setShowAgregarCliente(false)}>Cancelar</Button>\n        </>\n      ) : (\n        <Button onClick={() => setShowAgregarCliente(true)}>Agregar cliente nuevo</Button>\n      )}\n\n      <br />\n\n      {!showAgregarCliente ? (\n        <>\n          <input onChange={e => setBuscarId(e.target.value)} placeholder=\"Buscar Id\" />\n          <input onChange={e => setBuscarNombre(e.target.value)} placeholder=\"Buscar Nombre\" />\n          <input onChange={e => setBuscarApellido(e.target.value)} placeholder=\"Buscar Apellido\" />\n          <input onChange={e => setBuscarSexo(e.target.value)} placeholder=\"Buscar Sexo\" />\n          <input onChange={e => setBuscarDireccion(e.target.value)} placeholder=\"Buscar Direccion\" />\n          <input onChange={e => setBuscarTelefono(e.target.value)} placeholder=\"Buscar Telefono\" />\n        </>\n      ) : null}\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Sexo</th>\n            <th>Direccion</th>\n            <th>Telefono</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.clientes.map(cliente => (\n            <Cliente show={clientesIdFiltrados.includes(cliente.id)} {...cliente} key={cliente.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nconst Empleado = ({ id, nombre, apellido, sexo, direccion, telefono, clave, show }) => {\n  const [modificar, setModificar] = useState(false);\n  const [state, setState] = useContext(estadoContext);\n\n  const [nuevoNombre, setNuevoNombre] = useState(nombre);\n  const [nuevoApellido, setNuevoApellido] = useState(apellido);\n  const [nuevoSexo, setNuevoSexo] = useState(sexo);\n  const [nuevoDireccion, setNuevoDireccion] = useState(direccion);\n  const [nuevoTelefono, setNuevoTelefono] = useState(telefono);\n  const [nuevoClave, setNuevoClave] = useState(clave);\n\n  const eliminarEmpleado = () => {\n    if (window.confirm(`Seguro que quiere eliminar el empleado de id=${id}`)) {\n      setState(state => {\n        const empleadosNuevos = state.empleados.filter(empleado => empleado.id !== id);\n        return { ...state, empleados: empleadosNuevos };\n      });\n    }\n  };\n\n  const modificarEmpleado = () => {\n    if (window.confirm(`Seguro que quiere modificar el empleado de id=${id}`)) {\n      setState(state => {\n        const empleadosNuevos = state.empleados.map(empleado => {\n          if (empleado.id === id) {\n            return {\n              id,\n              nombre: nuevoNombre,\n              apellido: nuevoApellido,\n              sexo: nuevoSexo,\n              direccion: nuevoDireccion,\n              telefono: nuevoTelefono,\n              clave: nuevoClave,\n            };\n          } else return empleado;\n        });\n\n        return { ...state, empleados: empleadosNuevos };\n      });\n    }\n\n    setModificar(false);\n  };\n\n  if (!show) return null;\n\n  if (modificar)\n    return (\n      <tr>\n        <td>{id}</td>\n        <td>\n          <input onChange={e => setNuevoNombre(e.target.value)} defaultValue={nombre} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoApellido(e.target.value)} defaultValue={apellido} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoSexo(e.target.value)} defaultValue={sexo} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoDireccion(e.target.value)} defaultValue={direccion} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoTelefono(e.target.value)} defaultValue={telefono} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoClave(e.target.value)} defaultValue={clave} />\n        </td>\n        <td>\n          <Button style={{ marginRight: \"16px\" }} onClick={modificarEmpleado}>\n            Aceptar\n          </Button>\n          <Button onClick={() => setModificar(false)}>Cancelar</Button>\n        </td>\n      </tr>\n    );\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{nombre}</td>\n      <td>{apellido}</td>\n      <td>{sexo}</td>\n      <td>{direccion}</td>\n      <td>{telefono}</td>\n      <td>{clave}</td>\n      <td>\n        <Button style={{ marginRight: \"16px\" }} onClick={() => setModificar(true)}>\n          Modificar\n        </Button>\n        <Button onClick={eliminarEmpleado}>Eliminar</Button>\n      </td>\n    </tr>\n  );\n};\n\nconst Empleados = () => {\n  const [state, setState] = useContext(estadoContext);\n\n  const [showAgregarEmpleado, setShowAgregarEmpleado] = useState(false);\n  const [nuevoNombre, setNuevoNombre] = useState(\"\");\n  const [nuevoApellido, setNuevoApellido] = useState(\"\");\n  const [nuevoSexo, setNuevoSexo] = useState(\"\");\n  const [nuevoDireccion, setNuevoDireccion] = useState(\"\");\n  const [nuevoTelefono, setNuevoTelefono] = useState(\"\");\n  const [nuevoClave, setNuevoClave] = useState(\"\");\n\n  const [buscarId, setBuscarId] = useState(\"\");\n  const [buscarNombre, setBuscarNombre] = useState(\"\");\n  const [buscarApellido, setBuscarApellido] = useState(\"\");\n  const [buscarSexo, setBuscarSexo] = useState(\"\");\n  const [buscarDireccion, setBuscarDireccion] = useState(\"\");\n  const [buscarTelefono, setBuscarTelefono] = useState(\"\");\n  const [buscarClave, setBuscarClave] = useState(\"\");\n\n  let empleadosIdFiltrados = state.empleados.map(empleado => {\n    if (\n      String(empleado.id).toLowerCase().startsWith(buscarId.toLowerCase()) &&\n      empleado.nombre.toLowerCase().startsWith(buscarNombre.toLowerCase()) &&\n      empleado.apellido.toLowerCase().startsWith(buscarApellido.toLowerCase()) &&\n      empleado.sexo.toLowerCase().startsWith(buscarSexo.toLowerCase()) &&\n      empleado.direccion.toLowerCase().startsWith(buscarDireccion.toLowerCase()) &&\n      empleado.telefono.toLowerCase().startsWith(buscarTelefono.toLowerCase()) &&\n      empleado.clave.toLowerCase().startsWith(buscarClave.toLowerCase())\n    )\n      return empleado.id;\n    else return null;\n  });\n\n  empleadosIdFiltrados = empleadosIdFiltrados.filter(empleadoId => empleadoId !== null);\n\n  const agregarEmpleado = () => {\n    if (!nuevoNombre || !nuevoApellido || !nuevoSexo || !nuevoDireccion || !nuevoTelefono || !nuevoClave) {\n      alert(\"Todos los campos deben ser llenados\");\n      return;\n    }\n\n    const nuevoId = state.empleados.length === 0 ? 0 : state.empleados[state.empleados.length - 1].id + 1;\n    const empleadosNuevos = [\n      ...state.empleados,\n      {\n        id: nuevoId,\n        nombre: nuevoNombre,\n        apellido: nuevoApellido,\n        sexo: nuevoSexo,\n        direccion: nuevoDireccion,\n        telefono: nuevoTelefono,\n        clave: nuevoClave,\n      },\n    ];\n\n    setState(state => {\n      return { ...state, empleados: empleadosNuevos };\n    });\n\n    setShowAgregarEmpleado(false);\n  };\n\n  return (\n    <>\n      <h1>Empleados</h1>\n\n      {showAgregarEmpleado ? (\n        <>\n          <input onChange={e => setNuevoNombre(e.target.value)} placeholder=\"Nuevo Nombre\" />\n          <input onChange={e => setNuevoApellido(e.target.value)} placeholder=\"Nuevo Apellido\" />\n          <input onChange={e => setNuevoSexo(e.target.value)} placeholder=\"Nuevo Sexo\" />\n          <input onChange={e => setNuevoDireccion(e.target.value)} placeholder=\"Nueva Direccion\" />\n          <input onChange={e => setNuevoTelefono(e.target.value)} placeholder=\"Nuevo Telefono\" />\n          <input onChange={e => setNuevoClave(e.target.value)} placeholder=\"Nueva Clave\" />\n\n          <Button style={{ marginInline: \"16px\" }} onClick={agregarEmpleado}>\n            Agregar\n          </Button>\n          <Button onClick={() => setShowAgregarEmpleado(false)}>Cancelar</Button>\n        </>\n      ) : (\n        <Button onClick={() => setShowAgregarEmpleado(true)}>Agregar empleado nuevo</Button>\n      )}\n\n      <br />\n\n      {!showAgregarEmpleado ? (\n        <>\n          <input onChange={e => setBuscarId(e.target.value)} placeholder=\"Buscar Id\" />\n          <input onChange={e => setBuscarNombre(e.target.value)} placeholder=\"Buscar Nombre\" />\n          <input onChange={e => setBuscarApellido(e.target.value)} placeholder=\"Buscar Apellido\" />\n          <input onChange={e => setBuscarSexo(e.target.value)} placeholder=\"Buscar Sexo\" />\n          <input onChange={e => setBuscarDireccion(e.target.value)} placeholder=\"Buscar Direccion\" />\n          <input onChange={e => setBuscarTelefono(e.target.value)} placeholder=\"Buscar Telefono\" />\n          <input onChange={e => setBuscarClave(e.target.value)} placeholder=\"Buscar Clave\" />\n        </>\n      ) : null}\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Sexo</th>\n            <th>Direccion</th>\n            <th>Telefono</th>\n            <th>Clave</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.empleados.map(empleado => (\n            <Empleado show={empleadosIdFiltrados.includes(empleado.id)} {...empleado} key={empleado.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nconst Venta = ({ id, dia, mes, ano, totalBolivares, show }) => {\n  const [modificar, setModificar] = useState(false);\n  const [state, setState] = useContext(estadoContext);\n\n  const [nuevoDia, setNuevoDia] = useState(dia);\n  const [nuevoMes, setNuevoMes] = useState(mes);\n  const [nuevoAno, setNuevoAno] = useState(ano);\n  const [nuevoTotalBolivares, setNuevoTotalBolivares] = useState(totalBolivares);\n\n  const eliminarVenta = () => {\n    if (window.confirm(`Seguro que quiere eliminar la venta de id=${id}`)) {\n      setState(state => {\n        const ventasNuevas = state.ventas.filter(venta => venta.id !== id);\n        return { ...state, ventas: ventasNuevas };\n      });\n    }\n  };\n\n  const modificarVenta = () => {\n    if (window.confirm(`Seguro que quiere modificar la venta de id=${id}`)) {\n      setState(state => {\n        const ventasNuevas = state.ventas.map(venta => {\n          if (venta.id === id) {\n            return {\n              id,\n              dia: nuevoDia,\n              mes: nuevoMes,\n              ano: nuevoAno,\n              totalBolivares: nuevoTotalBolivares,\n            };\n          } else return venta;\n        });\n\n        return { ...state, ventas: ventasNuevas };\n      });\n    }\n\n    setModificar(false);\n  };\n\n  if (!show) return null;\n\n  if (modificar)\n    return (\n      <tr>\n        <td>{id}</td>\n        <td>\n          <input onChange={e => setNuevoDia(e.target.value)} defaultValue={dia} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoMes(e.target.value)} defaultValue={mes} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoAno(e.target.value)} defaultValue={ano} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoTotalBolivares(e.target.value)} defaultValue={totalBolivares} />\n        </td>\n        <td>\n          <Button style={{ marginRight: \"16px\" }} onClick={modificarVenta}>\n            Aceptar\n          </Button>\n          <Button onClick={() => setModificar(false)}>Cancelar</Button>\n        </td>\n      </tr>\n    );\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{dia}</td>\n      <td>{mes}</td>\n      <td>{ano}</td>\n      <td>{totalBolivares}</td>\n      <td>\n        <Button style={{ marginRight: \"16px\" }} onClick={() => setModificar(true)}>\n          Modificar\n        </Button>\n        <Button onClick={eliminarVenta}>Eliminar</Button>\n      </td>\n    </tr>\n  );\n};\n\nconst Ventas = () => {\n  const [state, setState] = useContext(estadoContext);\n\n  const [showAgregarVenta, setShowAgregarVenta] = useState(false);\n  const [nuevoDia, setNuevoDia] = useState(\"\");\n  const [nuevoMes, setNuevoMes] = useState(\"\");\n  const [nuevoAno, setNuevoAno] = useState(\"\");\n  const [nuevoTotalBolivares, setNuevoTotalBolivares] = useState(\"\");\n\n  const [buscarId, setBuscarId] = useState(\"\");\n  const [buscarDia, setBuscarDia] = useState(\"\");\n  const [buscarMes, setBuscarMes] = useState(\"\");\n  const [buscarAno, setBuscarAno] = useState(\"\");\n  const [buscarTotalBolivares, setBuscarBolivares] = useState(\"\");\n\n  let ventasIdFiltradas = state.ventas.map(venta => {\n    if (\n      String(venta.id).toLowerCase().startsWith(buscarId.toLowerCase()) &&\n      venta.dia.toLowerCase().startsWith(buscarDia.toLowerCase()) &&\n      venta.mes.toLowerCase().startsWith(buscarMes.toLowerCase()) &&\n      venta.ano.toLowerCase().startsWith(buscarAno.toLowerCase()) &&\n      venta.totalBolivares.toLowerCase().startsWith(buscarTotalBolivares.toLowerCase())\n    )\n      return venta.id;\n    else return null;\n  });\n\n  ventasIdFiltradas = ventasIdFiltradas.filter(ventaId => ventaId !== null);\n\n  const agregarVenta = () => {\n    if (!nuevoDia || !nuevoMes || !nuevoAno || !nuevoTotalBolivares) {\n      alert(\"Todos los campos deben ser llenados\");\n      return;\n    }\n\n    const nuevoId = state.ventas.length === 0 ? 0 : state.ventas[state.ventas.length - 1].id + 1;\n    const ventasNuevas = [\n      ...state.ventas,\n      {\n        id: nuevoId,\n        dia: nuevoDia,\n        mes: nuevoMes,\n        ano: nuevoAno,\n        totalBolivares: nuevoTotalBolivares,\n      },\n    ];\n\n    setState(state => {\n      return { ...state, ventas: ventasNuevas };\n    });\n\n    setShowAgregarVenta(false);\n  };\n\n  return (\n    <>\n      <h1>Ventas</h1>\n\n      {showAgregarVenta ? (\n        <>\n          <input onChange={e => setNuevoDia(e.target.value)} placeholder=\"Nuevo Dia\" />\n          <input onChange={e => setNuevoMes(e.target.value)} placeholder=\"Nuevo Mes\" />\n          <input onChange={e => setNuevoAno(e.target.value)} placeholder=\"Nuevo Año\" />\n          <input onChange={e => setNuevoTotalBolivares(e.target.value)} placeholder=\"Nuevo Total Bolivares\" />\n\n          <Button style={{ marginInline: \"16px\" }} onClick={agregarVenta}>\n            Agregar\n          </Button>\n          <Button onClick={() => setShowAgregarVenta(false)}>Cancelar</Button>\n        </>\n      ) : (\n        <Button onClick={() => setShowAgregarVenta(true)}>Agregar venta nueva</Button>\n      )}\n\n      <br />\n\n      {!showAgregarVenta ? (\n        <>\n          <input onChange={e => setBuscarId(e.target.value)} placeholder=\"Buscar Id\" />\n          <input onChange={e => setBuscarDia(e.target.value)} placeholder=\"Buscar Dia\" />\n          <input onChange={e => setBuscarMes(e.target.value)} placeholder=\"Buscar Mes\" />\n          <input onChange={e => setBuscarAno(e.target.value)} placeholder=\"Buscar Año\" />\n          <input onChange={e => setBuscarBolivares(e.target.value)} placeholder=\"Buscar Total Bolivares\" />\n        </>\n      ) : null}\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Dia</th>\n            <th>Mes</th>\n            <th>Año</th>\n            <th>Total Bolivares</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.ventas.map(venta => (\n            <Venta show={ventasIdFiltradas.includes(venta.id)} {...venta} key={venta.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nconst Comida = ({ id, nombre, descripcion, precioBolivares, show }) => {\n  const [modificar, setModificar] = useState(false);\n  const [state, setState] = useContext(estadoContext);\n\n  const [nuevoNombre, setNuevoNombre] = useState(nombre);\n  const [nuevoDescripcion, setNuevoDescripcion] = useState(descripcion);\n  const [nuevoPrecioBolivares, setNuevoPrecioBolivares] = useState(precioBolivares);\n\n  const eliminarComida = () => {\n    if (window.confirm(`Seguro que quiere eliminar la comida de id=${id}`)) {\n      setState(state => {\n        const comidasNuevas = state.comidas.filter(comida => comida.id !== id);\n        return { ...state, comidas: comidasNuevas };\n      });\n    }\n  };\n\n  const modificarComida = () => {\n    if (window.confirm(`Seguro que quiere modificar la comida de id=${id}`)) {\n      setState(state => {\n        const comidasNuevas = state.comidas.map(comida => {\n          if (comida.id === id) {\n            return {\n              id,\n              nombre: nuevoNombre,\n              descripcion: nuevoDescripcion,\n              precioBolivares: nuevoPrecioBolivares,\n            };\n          } else return comida;\n        });\n\n        return { ...state, comidas: comidasNuevas };\n      });\n    }\n\n    setModificar(false);\n  };\n\n  if (!show) return null;\n\n  if (modificar)\n    return (\n      <tr>\n        <td>{id}</td>\n        <td>\n          <input onChange={e => setNuevoNombre(e.target.value)} defaultValue={nombre} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoDescripcion(e.target.value)} defaultValue={descripcion} />\n        </td>\n        <td>\n          <input onChange={e => setNuevoPrecioBolivares(e.target.value)} defaultValue={precioBolivares} />\n        </td>\n        <td>\n          <Button style={{ marginRight: \"16px\" }} onClick={modificarComida}>\n            Aceptar\n          </Button>\n          <Button onClick={() => setModificar(false)}>Cancelar</Button>\n        </td>\n      </tr>\n    );\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{nombre}</td>\n      <td>{descripcion}</td>\n      <td>{precioBolivares}</td>\n      <td>\n        <Button style={{ marginRight: \"16px\" }} onClick={() => setModificar(true)}>\n          Modificar\n        </Button>\n        <Button onClick={eliminarComida}>Eliminar</Button>\n      </td>\n    </tr>\n  );\n};\n\nconst Comidas = () => {\n  const [state, setState] = useContext(estadoContext);\n\n  const [showAgregarComida, setShowAgregarComida] = useState(false);\n  const [nuevoNombre, setNuevoNombre] = useState(\"\");\n  const [nuevoDescripcion, setNuevoDescripcion] = useState(\"\");\n  const [nuevoPrecioBolivares, setNuevoPrecioBolivares] = useState(\"\");\n\n  const [buscarId, setBuscarId] = useState(\"\");\n  const [buscarNombre, setBuscarNombre] = useState(\"\");\n  const [buscarDescripcion, setBuscarDescripcion] = useState(\"\");\n  const [buscarPrecioBolivares, setBuscarPrecioBolivares] = useState(\"\");\n\n  let comidasIdFiltradas = state.comidas.map(comida => {\n    if (\n      String(comida.id).toLowerCase().startsWith(buscarId.toLowerCase()) &&\n      comida.nombre.toLowerCase().startsWith(buscarNombre.toLowerCase()) &&\n      comida.descripcion.toLowerCase().startsWith(buscarDescripcion.toLowerCase()) &&\n      comida.precioBolivares.toLowerCase().startsWith(buscarPrecioBolivares.toLowerCase())\n    )\n      return comida.id;\n    else return null;\n  });\n\n  comidasIdFiltradas = comidasIdFiltradas.filter(comidaId => comidaId !== null);\n\n  const agregarComida = () => {\n    if (!nuevoNombre || !nuevoDescripcion || !nuevoPrecioBolivares) {\n      alert(\"Todos los campos deben ser llenados\");\n      return;\n    }\n\n    const nuevoId = state.comidas.length === 0 ? 0 : state.comidas[state.comidas.length - 1].id + 1;\n    const comidasNuevas = [\n      ...state.comidas,\n      {\n        id: nuevoId,\n        nombre: nuevoNombre,\n        descripcion: nuevoDescripcion,\n        precioBolivares: nuevoPrecioBolivares,\n      },\n    ];\n\n    setState(state => {\n      return { ...state, comidas: comidasNuevas };\n    });\n\n    setShowAgregarComida(false);\n  };\n\n  return (\n    <>\n      <h1>Comidas</h1>\n\n      {showAgregarComida ? (\n        <>\n          <input onChange={e => setNuevoNombre(e.target.value)} placeholder=\"Nuevo Nombre\" />\n          <input onChange={e => setNuevoDescripcion(e.target.value)} placeholder=\"Nueva Descripcion\" />\n          <input onChange={e => setNuevoPrecioBolivares(e.target.value)} placeholder=\"Nuevo Precio Bolivares\" />\n\n          <Button style={{ marginInline: \"16px\" }} onClick={agregarComida}>\n            Agregar\n          </Button>\n          <Button onClick={() => setShowAgregarComida(false)}>Cancelar</Button>\n        </>\n      ) : (\n        <Button onClick={() => setShowAgregarComida(true)}>Agregar comida nueva</Button>\n      )}\n\n      <br />\n\n      {!showAgregarComida ? (\n        <>\n          <input onChange={e => setBuscarId(e.target.value)} placeholder=\"Buscar Id\" />\n          <input onChange={e => setBuscarNombre(e.target.value)} placeholder=\"Buscar Nombre\" />\n          <input onChange={e => setBuscarDescripcion(e.target.value)} placeholder=\"Buscar Descripcion\" />\n          <input onChange={e => setBuscarPrecioBolivares(e.target.value)} placeholder=\"Buscar Precio Bolivares\" />\n        </>\n      ) : null}\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Nombre</th>\n            <th>Descripcion</th>\n            <th>Precio Bolivares</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.comidas.map(comida => (\n            <Comida show={comidasIdFiltradas.includes(comida.id)} {...comida} key={comida.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nconst Login = ({ setLogged }) => {\n  const [usuario, setUsuario] = useState(\"\");\n  const [clave, setClave] = useState(\"\");\n\n  const handleLogin = () => {\n    if (usuario === \"prueba\" && clave === \"clave1234\") setLogged(true);\n    else alert(\"Contraseña incorrecta\");\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        margin: \"100px 200px\",\n        padding: \"32px\",\n        borderRadius: \"4px\",\n        border: \"1px solid gray\",\n      }}\n    >\n      <h1>Login</h1>\n      <input\n        onChange={e => setUsuario(e.target.value)}\n        value={usuario}\n        placeholder=\"Usuario\"\n        style={{ marginBottom: \"16px\" }}\n      />\n      <input\n        onChange={e => setClave(e.target.value)}\n        value={clave}\n        type=\"password\"\n        placeholder=\"Contraseña\"\n        style={{ marginBottom: \"16px\" }}\n      />\n      <Button onClick={handleLogin}>Ingresar</Button>\n    </div>\n  );\n};\n\nfunction App() {\n  const [state, setState] = useState(JSON.parse(window.localStorage.getItem(\"estado\")));\n  const [showReporte, setShowReporte] = useState(false);\n  const [showCalc, setShowCalc] = useState(false);\n  const [mostrarDolares, setMostrarDolares] = useState(false);\n  const [bsPorDolar, setBsPorDolar] = useState(500000);\n  const [logged, setLogged] = useState(false);\n\n  let ventaMasAltaId = -1;\n\n  state.ventas.forEach((venta, i) => {\n    if (i === 0) ventaMasAltaId = venta.id;\n    else {\n      if (Number(state.ventas.find(v => v.id === ventaMasAltaId).totalBolivares) < Number(venta.totalBolivares)) {\n        ventaMasAltaId = venta.id;\n      }\n    }\n  });\n\n  const ventaMasAlta = state.ventas.find(v => v.id === ventaMasAltaId);\n\n  let ventaMasBajaId = -1;\n\n  state.ventas.forEach((venta, i) => {\n    if (i === 0) ventaMasBajaId = venta.id;\n    else {\n      if (Number(state.ventas.find(v => v.id === ventaMasBajaId).totalBolivares) > Number(venta.totalBolivares)) {\n        ventaMasBajaId = venta.id;\n      }\n    }\n  });\n\n  const ventaMasBaja = state.ventas.find(v => v.id === ventaMasBajaId);\n\n  const totalGanancias = state.ventas.reduce((acc, venta) => {\n    return acc + Number(venta.totalBolivares);\n  }, 0);\n\n  window.localStorage.setItem(\"estado\", JSON.stringify(state));\n\n  const toggleDolares = () => {\n    if (!mostrarDolares) {\n      setBsPorDolar(prompt(\"Cuantos bolivares vale cada dolar?\"));\n      setMostrarDolares(true);\n    } else setMostrarDolares(false);\n  };\n\n  return (\n    <estadoContext.Provider value={[state, setState]}>\n      {logged ? (\n        <>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button style={{ marginRight: \"16px\" }} onClick={() => setShowReporte(true)}>\n              Generar Reporte General\n            </Button>\n            <Button onClick={() => setShowCalc(true)}>Calculadora</Button>\n          </div>\n\n          <Modal show={showReporte} onHide={() => setShowReporte(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Reporte General</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <h3>Total clientes: {state.clientes.length}</h3>\n              <h3>Total empleados: {state.empleados.length}</h3>\n              <h3>Total ventas: {state.ventas.length}</h3>\n              <h3>Total comidas: {state.comidas.length}</h3>\n              <hr />\n              <h3>\n                Venta mas alta:{\" \"}\n                {mostrarDolares ? (ventaMasAlta?.totalBolivares / bsPorDolar).toFixed(2) : ventaMasAlta?.totalBolivares}{\" \"}\n                {mostrarDolares ? \"$\" : \"Bs\"}\n              </h3>\n              <h3>\n                Venta mas baja:{\" \"}\n                {mostrarDolares ? (ventaMasBaja?.totalBolivares / bsPorDolar).toFixed(2) : ventaMasBaja?.totalBolivares}{\" \"}\n                {mostrarDolares ? \"$\" : \"Bs\"}\n              </h3>\n              <h3>\n                Total ganancias: {mostrarDolares ? (totalGanancias / bsPorDolar).toFixed(2) : totalGanancias}{\" \"}\n                {mostrarDolares ? \"$\" : \"Bs\"}\n              </h3>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={toggleDolares}>Mostrar montos en {mostrarDolares ? \"bolivares\" : \"dolares\"}</Button>\n              <Button variant=\"secondary\" onClick={() => setShowReporte(false)}>\n                Cerrar\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal show={showCalc} onHide={() => setShowCalc(false)}>\n            <Modal.Header closeButton>\n              <Modal.Title>Calculadora</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Calculator />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => setShowCalc(false)}>\n                Cerrar\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Clientes />\n          <Empleados />\n          <Ventas />\n          <Comidas />\n        </>\n      ) : (\n        <Login setLogged={setLogged} />\n      )}\n    </estadoContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}